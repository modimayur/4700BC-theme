{{ 'section-blog-post.css' | asset_url | stylesheet_tag }}
{{ 'section-blog-recipe-post.css' | asset_url | stylesheet_tag }}

<article class="article-template recipe-template">
  {%  liquid
    assign article_details = article.metafields.custom.recipe_detail.value
  %}

  {%- if article.image -%}
    {{ 'section-image-banner.css' | asset_url | stylesheet_tag }}
    {{ 'section-custom-image-banner.css' | asset_url | stylesheet_tag }}

    {%- style -%}
      @media screen and (max-width: 749px) {
        #Banner-{{ section.id }}::before,
        #Banner-{{ section.id }} .banner__media::before,
        #Banner-{{ section.id }}:not(.banner--mobile-bottom) .banner__content::before {
          padding-bottom: {{ 1 | divided_by: article.image.aspect_ratio | times: 100 }}%;
          content: '';
          display: block;
        }
      }

      @media screen and (min-width: 750px) {
        #Banner-{{ section.id }}::before,
        #Banner-{{ section.id }} .banner__media::before {
          padding-bottom: {{ 1 | divided_by: article.image.aspect_ratio | times: 100 }}%;
          content: '';
          display: block;
        }
      }
    {%- endstyle -%}
    {% comment %}
    <div
      class="article-template__hero-container{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--fade-in{% endif %}"
    >
      <div
        class="article-template__hero-adapt media"
        {% if article.image %}
          style="padding-bottom: {{ 1 | divided_by: article.image.aspect_ratio | times: 100 }}%;"
        {% endif %}
      >
        <img
          srcset="
            {% if article.image.width >= 350 %}{{ article.image | image_url: width: 350 }} 350w,{% endif %}
            {% if article.image.width >= 750 %}{{ article.image | image_url: width: 750 }} 750w,{% endif %}
            {% if article.image.width >= 1100 %}{{ article.image | image_url: width: 1100 }} 1100w,{% endif %}
            {% if article.image.width >= 1500 %}{{ article.image | image_url: width: 1500 }} 1500w,{% endif %}
            {% if article.image.width >= 2200 %}{{ article.image | image_url: width: 2200 }} 2200w,{% endif %}
            {% if article.image.width >= 3000 %}{{ article.image | image_url: width: 3000 }} 3000w,{% endif %}
            {{ article.image | image_url }} {{ article.image.width }}w
          "
          sizes="(min-width: {{ settings.page_width }}px) {{ settings.page_width | minus: 100 }}px, (min-width: 750px) calc(100vw - 10rem), 100vw"
          src="{{ article.image | image_url: width: 1100 }}"
          loading="eager"
          fetchpriority="high"
          width="{{ article.image.width }}"
          height="{{ article.image.height }}"
          alt="{{ article.image.alt | escape }}"
        >
      </div>
    </div>
    {% endcomment %}
    
    {%- liquid
      assign full_width = '100vw'
      assign widths = '375, 550, 750, 1100, 1500, 1780, 2000, 3000, 3840'
    
      assign half_width = '60vw'
      assign full_width = '120vw'
      assign stacked_sizes = '(min-width: 750px) 60vw, 120vw'
      assign widths = '450, 660, 900, 1320, 1800, 2136, 2400, 3600, 7680'
      assign fetch_priority = 'auto'
  
      if section.index == 1
        assign fetch_priority = 'high'
      endif
    -%}

    <div class="recipe-page-banner">
      <div id="Banner-{{ section.id }}" class="banner banner--content-align-left banner--content-align-mobile-center banner--adapt banner--mobile-bottom scroll-trigger animate--fade-in scroll-trigger--design-mode"
      >
        {%- if article.image != blank -%}
          <div class="banner__media media animate--fixed scroll-trigger animate--fade-in" style="background-color:#000;">
            {%- liquid
              assign image_height = article.image.width | divided_by: article.image.aspect_ratio
              if section.settings.image_2 != blank
                assign image_class = 'banner__media-image-half'
              endif
              if section.settings.image_2 != blank and section.settings.stack_images_on_mobile
                assign sizes = stacked_sizes
              elsif section.settings.image_2 != blank
                assign sizes = half_width
              else
                assign sizes = full_width
              endif
            -%}
            {{
              article.image
              | image_url: width: 3840
              | image_tag:
                width: article.image.width,
                height: image_height,
                class: image_class,
                sizes: sizes,
                widths: widths,
                fetchpriority: fetch_priority
            }}
          </div>
        {%- endif -%}
        <div class="top-breadcrumb page-width">{% render 'breadcrumbs' %}</div>
        <div class="banner__content page-width banner__content--middle-left page-width scroll-trigger animate--slide-in">
          <div class="content-container content-container--full-width-mobile">
            <h2 class="banner__heading inline-richtext h1">
              {{ article.title }}
            </h2>
            {% if article_details.subtitle != blank %}
              <div class="banner__text rte body">
                <p>{{ article_details.subtitle }}</p>
              </div>
            {% endif %}
            {% if article_details.video != blank %}
              <button class="video-btn button">
                Watch Recipe Video
              </button>
            {% endif %}
            <div class="action-links">
              <a href="{{ article_details.pdf }}" target="_blank" class="download-link article-btn-link">
                <span class="icon">{{ 'download.svg' | inline_asset_content }}</span>
                <span class="link-label">Download PDF</span>
              </a>
              {% if article_details.pdf != blank %}
              {% endif %}
              <a class="bookmark-link article-btn-link" href="" target="_blank">
                <span class="icon">{{ 'bookmark_page.svg' | inline_asset_content }}</span>
                <span class="link-label">Save to My Recipes</span>
              </a>
            </div>
          </div>
        </div>
      </div>
    </div>
  {%- endif -%}

  {%- for block in section.blocks -%}
    {%- case block.type -%}
      {%- when '@app' -%}
        <div class="page-width page-width--narrow">
          {% render block %}
        </div>
      {%- when 'featured_image' -%}
        {%- if article.image -%}
          <div
            class="article-template__hero-container{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--fade-in{% endif %}"
            {{ block.shopify_attributes }}
          >
            <div
              class="article-template__hero-{{ block.settings.image_height }} media"
              {% if block.settings.image_height == 'adapt' and article.image %}
                style="padding-bottom: {{ 1 | divided_by: article.image.aspect_ratio | times: 100 }}%;"
              {% endif %}
            >
              <img
                srcset="
                  {% if article.image.width >= 350 %}{{ article.image | image_url: width: 350 }} 350w,{% endif %}
                  {% if article.image.width >= 750 %}{{ article.image | image_url: width: 750 }} 750w,{% endif %}
                  {% if article.image.width >= 1100 %}{{ article.image | image_url: width: 1100 }} 1100w,{% endif %}
                  {% if article.image.width >= 1500 %}{{ article.image | image_url: width: 1500 }} 1500w,{% endif %}
                  {% if article.image.width >= 2200 %}{{ article.image | image_url: width: 2200 }} 2200w,{% endif %}
                  {% if article.image.width >= 3000 %}{{ article.image | image_url: width: 3000 }} 3000w,{% endif %}
                  {{ article.image | image_url }} {{ article.image.width }}w
                "
                sizes="(min-width: {{ settings.page_width }}px) {{ settings.page_width | minus: 100 }}px, (min-width: 750px) calc(100vw - 10rem), 100vw"
                src="{{ article.image | image_url: width: 1100 }}"
                loading="eager"
                fetchpriority="high"
                width="{{ article.image.width }}"
                height="{{ article.image.height }}"
                alt="{{ article.image.alt | escape }}"
              >
            </div>
          </div>
        {%- endif -%}

      {%- when 'title' -%}
        <header
          class="page-width page-width--narrow{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--fade-in{% endif %}"
          {{ block.shopify_attributes }}
        >
          <h1
            class="article-template__title"
          >
            {{ article.title | escape }}
          </h1>
          {%- if block.settings.blog_show_date -%}
            <span class="circle-divider caption-with-letter-spacing">
              {{- article.published_at | time_tag: format: 'date' -}}
            </span>
          {%- endif -%}
          {%- if block.settings.blog_show_author -%}
            <span class="caption-with-letter-spacing">
              <span>{{ article.author }}</span>
            </span>
          {%- endif -%}
        </header>

      {%- when 'content' -%}
        <div
          class="article-template__content page-width page-width--narrow rte{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}"
          {{ block.shopify_attributes }}
        >
          {{ article.content }}
        </div>

      {%- when 'share' -%}
        <div
          class="article-template__social-sharing page-width page-width--narrow{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}"
          {{ block.shopify_attributes }}
        >
          {% assign share_url = request.origin | append: article.url %}
          {% render 'share-button', block: block, share_link: share_url %}
        </div>
    {%- endcase -%}
  {%- endfor -%}

  {% if article_details.servings != blank or article_details.duration != blank or article_details.difficulty_level != blank %}
    <div class="article-specification-container">
      <div class="page-width">
        <div class="article-specification">
          {% if article_details.servings != blank %}
            <div class="article-specification__item">
              <span class="icon">
                {{ 'serving.svg' | inline_asset_content }}
              </span>
              <p>
                <span class="article-specification__label">Servings:</span>
                <span class="article-specification__value">{{ article_details.servings }}</span>
              </p>
            </div>
          {% endif %}
          {% if article_details.duration != blank %}
            <div class="article-specification__item">
              <span class="icon">
                {{ 'duration.svg' | inline_asset_content }}
              </span>
              <p>
                <span class="article-specification__label">Duration:</span>
                <span class="article-specification__value">{{ article_details.duration }}</span>
              </p>
            </div>
          {% endif %}
          {% if article_details.difficulty_level != blank %}
            <div class="article-specification__item">
              <span class="icon">
                {{ 'level.svg' | inline_asset_content }}
              </span>
              <p>
                <span class="article-specification__label">Difficulty Level:</span>
                <span class="article-specification__value">{{ article_details.difficulty_level }}</span>
              </p>
            </div>
          {% endif %}
        </div>
      </div>
    </div>
  {% endif %}

  <div class="recipe-detail-container page-width">
    <div class="grid">
      <div class="grid__item sidebar">
        <div class="left-sidebar">
          {% if article_details.ingredient_list != blank %}
            <div class="accordian-wrapper ingredient-list open">
              <accordian-block>
                <button class="accordian-heading">
                  <span>Ingredient List</span>
                  <span class="icon">{{ 'caret.svg' | inline_asset_content }}</span>
                </button>
                <div class="accordian-content">
                  <div class="accordian-content-area">
                    <ul>
                      {% for ingredient in article_details.ingredient_list.value %}
                        <li><span>
                          <input type="checkbox" name="ingredients" value="{{ ingredient }}" id="ingredient-{{ forloop.index }}">
                          <label for="ingredient-{{ forloop.index }}">{{ ingredient }}</label>
                        </span></li>
                      {% endfor %}
                    </ul>
                  </div>
                </div>
              </accordian-block>
            </div>
          {% endif %}
          {% if article_details.nutrition_information != blank %}
            <div class="accordian-wrapper nutrition-info open">
              <accordian-block>
                <button class="accordian-heading">
                  <span>Nutrition Information</span>
                  <span class="icon">{{ 'caret.svg' | inline_asset_content }}</span>
                </button>
                <div class="accordian-content">
                  <div class="accordian-content-area">
                    <ul>
                      {% for nutrition in article_details.nutrition_information.value %}
                        <li><span>{{ nutrition }}</span></li>
                      {% endfor %}
                    </ul>
                  </div>
                </div>
              </accordian-block>
            </div>
          {% endif %}
          {% if article_details.recipe_tips != blank %}
            <div class="accordian-wrapper recipe-tips">
              <accordian-block>
                <button class="accordian-heading">
                  <span>Recipe Tips</span>
                  <span class="icon">{{ 'caret.svg' | inline_asset_content }}</span>
                </button>
                <div class="accordian-content">
                  <div class="accordian-content-area">
                    <ul>
                      {% for tip in article_details.recipe_tips.value %}
                        <li><span>{{ tip }}</span></li>
                      {% endfor %}
                    </ul>
                  </div>
                </div>
              </accordian-block>
            </div>
          {% endif %}
        </div>
      </div>
      <div class="grid__item main-block">
        <div class="instruction-list-container">
          <div class="instruction-list-heading">
            <h2>Instructions</h2>
          </div>
          <div class="instruction-list">
            {% for instruction in article_details.instructions.value %}
              <div class="instruction-block">
                <div class="step">
                  <span>{{ forloop.index }}</span>
                </div>
                <div class="instruction-text">
                  <p>{{ instruction }}</p>
                </div>
                <div class="action">
                  <button class="action-btn" data-incomplete-text="Mark as Complete" data-complete-text="Completed">
                    <span class="icon">{{ 'prepare.svg' | inline_asset_content }}</span>
                    <span class="label">Mark as Complete</span>
                  </button>
                </div>
              </div>
            {% endfor %}
          </div>
        </div>
      </div>
    </div>
  </div>

  {% comment %}
    <div class="article-template__back element-margin-top center{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}">
      <a href="{{ blog.url }}" class="article-template__link link animate-arrow">
        <span class="icon-wrap">{% render 'icon-arrow' %}</span>
        {{ 'blogs.article.back_to_blog' | t: title: blog.title | escape }}
      </a>
    </div>
  {% endcomment %}
  {%- if blog.comments_enabled? -%}
    <div class="article-template__comment-wrapper background-secondary">
      <div
        id="comments"
        class="page-width page-width--narrow{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}"
      >
        {%- if article.comments_count > 0 -%}
          {%- assign anchorId = '#Comments-' | append: article.id -%}

          <h2 id="Comments-{{ article.id }}" tabindex="-1">
            {{ 'blogs.article.comments' | t: count: article.comments_count }}
          </h2>
          {% paginate article.comments by 5 %}
            <div class="article-template__comments">
              {%- if comment.status == 'pending' and comment.content -%}
                <article id="{{ comment.id }}" class="article-template__comments-comment">
                  {{ comment.content }}
                  <footer class="right">
                    <span class="circle-divider caption-with-letter-spacing">{{ comment.author }}</span>
                  </footer>
                </article>
              {%- endif -%}

              {%- for comment in article.comments -%}
                <article id="{{ comment.id }}" class="article-template__comments-comment">
                  {{ comment.content }}
                  <footer class="right">
                    <span class="circle-divider caption-with-letter-spacing">{{ comment.author }}</span
                    ><span class="caption-with-letter-spacing">
                      {{- comment.created_at | time_tag: format: 'date' -}}
                    </span>
                  </footer>
                </article>
              {%- endfor -%}
              {% render 'pagination', paginate: paginate, anchor: anchorId %}
            </div>
          {% endpaginate %}
        {%- endif -%}
        {% form 'new_comment', article %}
          {%- liquid
            assign post_message = 'blogs.article.success'
            if blog.moderated? and comment.status == 'unapproved'
              assign post_message = 'blogs.article.success_moderated'
            endif
          -%}
          <h2>{{ 'blogs.article.comment_form_title' | t }}</h2>
          {%- if form.errors -%}
            <div class="form__message" role="alert">
              <h3 class="form-status caption-large text-body" tabindex="-1" autofocus>
                {% render 'icon-error' %}
                {{ 'templates.contact.form.error_heading' | t }}
              </h3>
            </div>
            <ul class="form-status-list caption-large">
              {%- for field in form.errors -%}
                <li>
                  <a href="#CommentForm-{{ field }}" class="link">
                    {%- if form.errors.translated_fields[field] contains 'author' -%}
                      {{ 'blogs.article.name' | t }}
                    {%- elsif form.errors.translated_fields[field] contains 'body' -%}
                      {{ 'blogs.article.message' | t }}
                    {%- else -%}
                      {{ form.errors.translated_fields[field] }}
                    {%- endif -%}
                    {{ form.errors.messages[field] }}
                  </a>
                </li>
              {%- endfor -%}
            </ul>
          {%- elsif form.posted_successfully? -%}
            <div class="form-status-list form__message" role="status">
              <h3 class="form-status" tabindex="-1" autofocus>
                {% render 'icon-success' %}
                {{ post_message | t }}
              </h3>
            </div>
          {%- endif -%}

          <div
            {% if blog.moderated? == false %}
              class="article-template__comments-fields"
            {% endif %}
          >
            <div class="article-template__comment-fields">
              <div class="field field--with-error">
                <input
                  type="text"
                  name="comment[author]"
                  id="CommentForm-author"
                  class="field__input"
                  autocomplete="name"
                  value="{{ form.author }}"
                  aria-required="true"
                  required
                  {% if form.errors contains 'author' %}
                    aria-invalid="true"
                    aria-describedby="CommentForm-author-error"
                  {% endif %}
                  placeholder="{{ 'blogs.article.name' | t }}"
                >
                <label class="field__label" for="CommentForm-author">
                  {{- 'blogs.article.name' | t }}
                  <span aria-hidden="true">*</span></label
                >
                {%- if form.errors contains 'author' -%}
                  <small id="CommentForm-author-error">
                    <span class="form__message">
                      {%- render 'icon-error' -%}
                      {{- 'blogs.article.name' | t }}
                      {{ form.errors.messages.author }}.</span
                    >
                  </small>
                {%- endif -%}
              </div>
              <div class="field field--with-error">
                <input
                  type="email"
                  name="comment[email]"
                  id="CommentForm-email"
                  autocomplete="email"
                  class="field__input"
                  value="{{ form.email }}"
                  autocorrect="off"
                  autocapitalize="off"
                  aria-required="true"
                  required
                  {% if form.errors contains 'email' %}
                    aria-invalid="true"
                    aria-describedby="CommentForm-email-error"
                  {% endif %}
                  placeholder="{{ 'blogs.article.email' | t }}"
                >
                <label class="field__label" for="CommentForm-email">
                  {{- 'blogs.article.email' | t }}
                  <span aria-hidden="true">*</span></label
                >
                {%- if form.errors contains 'email' -%}
                  <small id="CommentForm-email-error">
                    <span class="form__message">
                      {%- render 'icon-error' -%}
                      {{- 'blogs.article.email' | t }}
                      {{ form.errors.messages.email }}.</span
                    >
                  </small>
                {%- endif -%}
              </div>
            </div>
            <div class="field field--with-error">
              <textarea
                rows="5"
                name="comment[body]"
                id="CommentForm-body"
                class="text-area field__input"
                aria-required="true"
                required
                {% if form.errors contains 'body' %}
                  aria-invalid="true"
                  aria-describedby="CommentForm-body-error"
                {% endif %}
                placeholder="{{ 'blogs.article.message' | t }}"
              >{{ form.body }}</textarea>
              <label class="form__label field__label" for="CommentForm-body">
                {{- 'blogs.article.message' | t }}
                <span aria-hidden="true">*</span></label
              >
            </div>
            {%- if form.errors contains 'body' -%}
              <small id="CommentForm-body-error">
                <span class="form__message">
                  {%- render 'icon-error' -%}
                  {{- 'blogs.article.message' | t }}
                  {{ form.errors.messages.body }}.</span
                >
              </small>
            {%- endif -%}
          </div>
          {%- if blog.moderated? -%}
            <p class="article-template__comment-warning caption">{{ 'blogs.article.moderated' | t }}</p>
          {%- endif -%}
          <input type="submit" class="button" value="{{ 'blogs.article.post' | t }}">
        {% endform %}
      </div>
    </div>
  {%- endif -%}
</article>

<script type="text/javascript">
  document.addEventListener('DOMContentLoaded', function() {
    const buttons = document.querySelectorAll('.action-btn');
    buttons.forEach((button) => {
      button.addEventListener('click', function(){
        button.classList.add('completed');
        button.querySelector('.label').innerText = button.dataset.completeText;
      });
    });

    const allAccordianButtons = document.querySelectorAll('.accordian-heading');
    allAccordianButtons.forEach((button) => {
      const content = button.nextElementSibling;
      if(button.closest('.accordian-wrapper').classList.contains('open')){
      content.style.maxHeight = content.scrollHeight + 'px';
      }
      button.addEventListener('click', function(){
        console.log(content);
        if(this.closest('.accordian-wrapper').classList.contains('open')){
          content.style.maxHeight = '0';
          this.closest('.accordian-wrapper').classList.remove('open');
        }else{
          content.style.maxHeight = content.scrollHeight + 'px';
          this.closest('.accordian-wrapper').classList.add('open');
        }

        //this.closest('.accordian-content').
      });
    });
  });
</script>

<script type="application/ld+json">
  {{ article | structured_data }}
</script>

{% schema %}
{
  "name": "t:sections.main-article.name",
  "tag": "section",
  "class": "section",
  "blocks": [
    {
      "type": "@app"
    },
    {
      "type": "featured_image",
      "name": "t:sections.main-article.blocks.featured_image.name",
      "limit": 1,
      "settings": [
        {
          "type": "select",
          "id": "image_height",
          "options": [
            {
              "value": "adapt",
              "label": "t:sections.main-article.blocks.featured_image.settings.image_height.options__1.label"
            },
            {
              "value": "small",
              "label": "t:sections.main-article.blocks.featured_image.settings.image_height.options__2.label"
            },
            {
              "value": "medium",
              "label": "t:sections.main-article.blocks.featured_image.settings.image_height.options__3.label"
            },
            {
              "value": "large",
              "label": "t:sections.main-article.blocks.featured_image.settings.image_height.options__4.label"
            }
          ],
          "default": "adapt",
          "label": "t:sections.main-article.blocks.featured_image.settings.image_height.label",
          "info": "t:sections.main-article.blocks.featured_image.settings.image_height.info"
        }
      ]
    },
    {
      "type": "title",
      "name": "t:sections.main-article.blocks.title.name",
      "limit": 1,
      "settings": [
        {
          "type": "checkbox",
          "id": "blog_show_date",
          "default": true,
          "label": "t:sections.main-article.blocks.title.settings.blog_show_date.label"
        },
        {
          "type": "checkbox",
          "id": "blog_show_author",
          "default": false,
          "label": "t:sections.main-article.blocks.title.settings.blog_show_author.label"
        }
      ]
    },
    {
      "type": "content",
      "name": "t:sections.main-article.blocks.content.name",
      "limit": 1
    },
    {
      "type": "share",
      "name": "t:sections.main-article.blocks.share.name",
      "limit": 2,
      "settings": [
        {
          "type": "text",
          "id": "share_label",
          "label": "t:sections.main-article.blocks.share.settings.text.label",
          "default": "t:sections.main-article.blocks.share.settings.text.default"
        },
        {
          "type": "paragraph",
          "content": "t:sections.main-article.blocks.share.settings.featured_image_info.content"
        },
        {
          "type": "paragraph",
          "content": "t:sections.main-article.blocks.share.settings.title_info.content"
        }
      ]
    }
  ]
}
{% endschema %}
