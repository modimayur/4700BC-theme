{{ 'section-main-page.css' | asset_url | stylesheet_tag }}

{%- style -%}
  .section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
  }

  @media screen and (min-width: 750px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }
  .page-heading{
    background: url({{ 'page_head_bg.png' |  asset_img_url :'master' }}) no-repeat center center;
    background-size: cover;    
  }
{%- endstyle -%}

<div class="page-heading">
  <h1 class="main-page-title center page-title h0{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--fade-in{% endif %}">
    {{ page.title | escape }}
  </h1>
</div>

<div class="page-width section-{{ section.id }}-padding">
  <div class="rte{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}">
    <div class="vertical-container">
        <div class="tab-anchor">
          <div class="anchor-container page__column-sticky">
  
          </div>
        </div>
        <div class="tab-content scroll-trigger animate--slide-in">
          {{ page.content }}
        </div>
    </div>
  </div>
</div>

{% javascript %} 
  const tabTitle = document.querySelectorAll('.rte .tab-content h2');
  const tabTitleContainer = document.querySelector('.anchor-container');
  const ulElement = document.createElement('ul');
  tabTitle.forEach((element, index) => {
    element.setAttribute('id', `content-${index+1}`);
    element.classList.add('scroll-margin');
    const liElement = document.createElement('li');
    
    const button = document.createElement('button');
    button.textContent = element.textContent;
    if(index == 0){
      button.className = 'tab-link button active';
    }else{
      button.className = 'tab-link button';
    }
    button.setAttribute('data-content', `content-${index+1}`);

    liElement.appendChild(button);
    ulElement.appendChild(liElement);

    button.addEventListener('click', () => {
      tabTitleContainer.querySelectorAll('button').forEach((button) => {
        button.classList.remove('active');
      });
      button.classList.add('active');
      document.querySelector(`#content-${index+1}`).scrollIntoView({
        behavior: 'smooth'
      });
    });
  });
  tabTitleContainer.appendChild(ulElement);
{% endjavascript %}

{% schema %}
{
  "name": "t:sections.main-page.name",
  "tag": "section",
  "class": "section",
  "settings": [
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 36
    }
  ]
}
{% endschema %}
